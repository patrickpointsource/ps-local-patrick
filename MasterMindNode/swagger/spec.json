{
    "swagger": "2.0",
    "info": {
        "title": "MasterMind Middleware API",
        "description": "The data storage middleware for MasterMind",
        "version": "3.0.0"
    },
    "host": "localhost:3000",
    "schemes": [
        "http"
    ],
    "basePath": "/v3",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/assignments": {
            "get": {
                "summary": "Assignments (IGNORE)",
                "description": "The Assignments endpoint returns information about assignments.\n",
                "tags": [
                    "Assignments"
                ],
                "responses": {
                    "200": {
                        "description": "An array of assignments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Assignment"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/configurations": {
            "get": {
                "summary": "Configuration (IGNORE)",
                "description": "The Configuration endpoint returns information about configurations.\n",
                "tags": [
                    "Configuration"
                ],
                "responses": {
                    "200": {
                        "description": "An array of configurations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Configuration"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/departments": {
            "get": {
                "summary": "Department (IGNORE)",
                "description": "The Department endpoint returns information about departments.\n",
                "tags": [
                    "Department"
                ],
                "responses": {
                    "200": {
                        "description": "An array of departments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Department"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hours": {
            "get": {
                "summary": "Retrieve Hours",
                "description": "The Hours endpoint returns hours.\n",
                "tags": [
                    "Hours"
                ],
                "parameters": [
                    {
                        "name": "person",
                        "in": "query",
                        "description": "Filter hours records to those belonging to the given person, identified by ID",
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Filter hours records to those on or after the given date",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Filter hours records to those before the given date",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "projects",
                        "in": "query",
                        "description": "Filter hours records to those connected to one of the indicated projects, identified by ID",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Filter hours based on a complex query format. Format details TBD",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of hours",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Hours"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Hours",
                "description": "Create a new hours record.\nAn ID in the POST-ed body will be ignored.\n",
                "tags": [
                    "Hours"
                ],
                "parameters": [
                    {
                        "name": "hours",
                        "in": "body",
                        "description": "Data representing the Hours to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Hours"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created hours",
                        "schema": {
                            "$ref": "#/definitions/Hours"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hours/{id}": {
            "get": {
                "summary": "Retrieve Hours",
                "description": "The Hours endpoint returns a single hours record.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the hours to retrieve.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Hours"
                ],
                "responses": {
                    "200": {
                        "description": "The single hours record specified by the ID",
                        "schema": {
                            "$ref": "#/definitions/Hours"
                        }
                    },
                    "404": {
                        "description": "A hours record with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Hours",
                "description": "Updates an existing hours record.\n",
                "tags": [
                    "Hours"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the hours to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hours",
                        "in": "body",
                        "description": "New data representing the hours record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Hours"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly updated hours record",
                        "schema": {
                            "$ref": "#/definitions/Hours"
                        }
                    },
                    "404": {
                        "description": "A hours record with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Hours",
                "description": "Deletes a single hours record.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the hours record to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Hours"
                ],
                "responses": {
                    "200": {
                        "description": "The single hours record specified by the ID was deleted"
                    },
                    "404": {
                        "description": "A hours record with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/links": {
            "get": {
                "summary": "Links (IGNORE)",
                "description": "The Links endpoint returns information about links.\n",
                "tags": [
                    "Links"
                ],
                "responses": {
                    "200": {
                        "description": "An array of links",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Link"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "summary": "Notifications (IGNORE)",
                "description": "The Notifications endpoint returns information about notifications.\n",
                "tags": [
                    "Notifications"
                ],
                "responses": {
                    "200": {
                        "description": "An array of notifications",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Notification"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/people": {
            "get": {
                "summary": "People (IGNORE)",
                "description": "The People endpoint returns information about people.\n",
                "tags": [
                    "People"
                ],
                "responses": {
                    "200": {
                        "description": "An array of people",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Person"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "summary": "Retrieve Projects",
                "description": "The Projects endpoint returns projects.\n",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "A set of ids to which this set should be reduced.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "executiveSponsor",
                        "in": "query",
                        "description": "Filter projects by only those belonging to this executive sponsor (specified by the ID of the executive sponsor Person)",
                        "type": "string"
                    },
                    {
                        "name": "committed",
                        "in": "query",
                        "description": "Filter projects by only those that are committed",
                        "type": "boolean"
                    },
                    {
                        "name": "current",
                        "in": "query",
                        "description": "Filter projects by only those that are current",
                        "type": "boolean"
                    },
                    {
                        "name": "person",
                        "in": "query",
                        "description": "Filter projects to those to whom the person is assigned, where the person is provided by ID",
                        "type": "string"
                    },
                    {
                        "name": "states",
                        "in": "query",
                        "description": "Filter projects to those in one of the given states",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "planning",
                                "active",
                                "done",
                                "poc",
                                "preSales",
                                "supportActive",
                                "clientActive"
                            ]
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "Filter projects to those of one of the given types",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "invest",
                                "poc",
                                "paid"
                            ]
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Filter projects to those starting on or after the given date.",
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Filter projects to those ending before the given date.",
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Project",
                "description": "Create a new project.\nAn ID in the POST-ed project will be ignored.\n",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "project",
                        "in": "body",
                        "description": "Data representing the project to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created project",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/projects/{id}": {
            "get": {
                "summary": "Retrieve Project",
                "description": "The Project endpoint returns a single project.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the project to retrieve.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Projects"
                ],
                "responses": {
                    "200": {
                        "description": "The single project specified by the ID",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "404": {
                        "description": "A project with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Project",
                "description": "Updates an existing project.\n",
                "tags": [
                    "Projects"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the project to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "project",
                        "in": "body",
                        "description": "New data representing the project",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly updated project",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "404": {
                        "description": "A project with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Project",
                "description": "Deletes a single Project.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the project to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Projects"
                ],
                "responses": {
                    "200": {
                        "description": "The single project specified by the ID was deleted"
                    },
                    "404": {
                        "description": "A project with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/report-favorites": {
            "get": {
                "summary": "ReportFavorites (IGNORE)",
                "description": "The ReportFavorites endpoint returns information about report favorites.\n",
                "tags": [
                    "ReportFavorites"
                ],
                "responses": {
                    "200": {
                        "description": "An array of report favorites",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportFavorite"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "summary": "Roles (IGNORE)",
                "description": "The Roles endpoint returns information about roles.\n",
                "tags": [
                    "Roles"
                ],
                "responses": {
                    "200": {
                        "description": "An array of roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Role"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/security-roles": {
            "get": {
                "summary": "SecurityRoles (IGNORE)",
                "description": "The SecurityRoles endpoint returns information about security roles.\n",
                "tags": [
                    "SecurityRoles"
                ],
                "responses": {
                    "200": {
                        "description": "An array of security roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SecurityRole"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/skills": {
            "get": {
                "summary": "Skills (IGNORE)",
                "description": "The Skills endpoint returns information about skills.\n",
                "tags": [
                    "Skills"
                ],
                "responses": {
                    "200": {
                        "description": "An array of skills",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Skill"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "x-swagger-router-controller": "Tasks",
            "get": {
                "summary": "Retrieve Tasks",
                "description": "The Tasks endpoint returns tasks.\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A string to match against the 'name' field on tasks. Could be a full/exact name or might be a substring to match against full task names in the database",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Task"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Task",
                "description": "Create a new task.\nAn 'id' or 'created' field in the POST-ed task will be ignored.\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "task",
                        "in": "body",
                        "description": "Data representing the Task to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created task",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "x-swagger-router-controller": "Tasks",
            "get": {
                "summary": "Retrieve Task",
                "description": "The Task endpoint returns a single task.\n",
                "operationId": "getSingleTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task to retrieve.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "description": "The single task specified by the ID",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "404": {
                        "description": "A task with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Task",
                "description": "Updates an existing task.\n",
                "tags": [
                    "Tasks"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task to update.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "task",
                        "in": "body",
                        "description": "New data representing the Task",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly updated task",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "404": {
                        "description": "A task with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Task",
                "description": "Deletes a single Task.\n",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the task to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "description": "The single task specified by the ID was deleted"
                    },
                    "404": {
                        "description": "A task with the specified ID could not be found.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user-roles": {
            "get": {
                "summary": "UserRoles (IGNORE)",
                "description": "The Tasks endpoint returns information about user roles.\n",
                "tags": [
                    "UserRoles"
                ],
                "responses": {
                    "200": {
                        "description": "An array of user roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserRole"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/vacations": {
            "get": {
                "summary": "Vacations (IGNORE)",
                "description": "The Vacations endpoint returns information about vacations.\n",
                "tags": [
                    "Vacations"
                ],
                "responses": {
                    "200": {
                        "description": "An array of vacations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vacation"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Assignment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "hoursPerWeek": {
                    "type": "number"
                },
                "isCurrent": {
                    "type": "boolean"
                },
                "isFuture": {
                    "type": "boolean"
                },
                "isPast": {
                    "type": "boolean"
                },
                "percentage": {
                    "type": "number"
                },
                "person": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "project": {
                    "type": "string",
                    "description": "ID of Project"
                },
                "role": {
                    "type": "string",
                    "description": "ID of the Project Role"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "role",
                "person",
                "startDate"
            ]
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "config": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "value"
                        ]
                    }
                },
                "resource": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                }
            },
            "required": [
                "config",
                "properties"
            ]
        },
        "Department": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "departmentNickname": {
                    "type": "string"
                },
                "departmentCategory": {
                    "type": "string",
                    "description": "ID of Department Category"
                },
                "departmentCode": {
                    "$ref": "#/definitions/departmentCode"
                },
                "departmentManager": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "departmentPeople": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "departmentNickname",
                "departmentCategory"
            ]
        },
        "departmentCode": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "DepartmentCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "trimmedValue": {
                    "type": "string"
                },
                "nicknames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "trimmedValue"
            ]
        },
        "Hours": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "editMode": {
                    "type": "boolean"
                },
                "hours": {
                    "type": "number"
                },
                "person": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "task": {
                    "type": "string",
                    "description": "ID of Task"
                },
                "project": {
                    "type": "string",
                    "description": "ID of Project"
                }
            },
            "required": [
                "id",
                "hours",
                "description",
                "person"
            ]
        },
        "Link": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "project": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "resource": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "label": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "required": [
                "project"
            ]
        },
        "Notification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "header": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "person": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "ID of model"
                        },
                        "type": {
                            "type": "string",
                            "description": "Type of model (e.g. Vacation)"
                        }
                    }
                }
            },
            "required": [
                "person",
                "type"
            ]
        },
        "Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "agreedToTerms": {
                    "type": "boolean"
                },
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "changePasswordAtNextLogin": {
                    "type": "boolean"
                },
                "creationTime": {
                    "type": "string"
                },
                "customerId": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "primary": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "includeInGlobalAddressList": {
                    "type": "boolean"
                },
                "ipWhitelisted": {
                    "type": "boolean"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDelegatedAdmin": {
                    "type": "boolean"
                },
                "isMailboxSetup": {
                    "type": "boolean"
                },
                "kind": {
                    "type": "string"
                },
                "lastLoginTime": {
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "nonEditableAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "orgUnitPath": {
                    "type": "string"
                },
                "phones": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "primaryEmail": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "thumbnailPhotoUrl": {
                    "type": "string"
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Person": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of Account"
                    }
                },
                "googleId": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isActive": {
                    "type": "string"
                },
                "jazzHubId": {
                    "type": "string"
                },
                "lastSynchronized": {
                    "type": "string"
                },
                "mBox": {
                    "type": "string"
                },
                "manager": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "name": {
                    "$ref": "#/definitions/name"
                },
                "phone": {
                    "type": "string"
                },
                "primaryRole": {
                    "type": "string",
                    "description": "ID of Role"
                },
                "resource": {
                    "type": "string"
                },
                "skypeId": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "vacationCapacity": {
                    "type": "number"
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "proficiency": {
                                "type": "number"
                            },
                            "type": {
                                "type": "string",
                                "description": "ID of Skill"
                            }
                        }
                    }
                },
                "jobTitle": {
                    "type": "string",
                    "description": "ID of Job Title"
                },
                "secondaryRoles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of Role"
                    }
                },
                "partTimeHours": {
                    "type": "number"
                },
                "partTime": {
                    "type": "boolean"
                }
            },
            "required": [
                "name"
            ]
        },
        "name": {
            "type": "object",
            "properties": {
                "familyName": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                }
            }
        },
        "Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "committed": {
                    "type": "boolean"
                },
                "created": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "by": {
                            "type": "string",
                            "description": "ID of Person"
                        }
                    }
                },
                "customerName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "executiveSponsor": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "initStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "initEndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modified": {
                    "type": "object",
                    "properties": {
                        "date": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "by": {
                            "type": "string",
                            "description": "ID of Person"
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "salesSponsor": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "default": "planning",
                    "enum": [
                        "planning",
                        "active",
                        "done",
                        "poc",
                        "preSales",
                        "supportActive",
                        "clientActive"
                    ]
                },
                "type": {
                    "enum": [
                        "invest",
                        "poc",
                        "paid"
                    ]
                },
                "terms": {
                    "type": "object",
                    "properties": {
                        "fixedBidServicesRevenue": {
                            "type": "number"
                        },
                        "includesProjectManagementOverhead": {
                            "type": "boolean"
                        },
                        "billingFrequency": {
                            "type": "string"
                        },
                        "billingDate": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        },
                        "softwareEstimate": {
                            "type": "number"
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/ProjectRole"
                    }
                }
            },
            "required": [
                "customerName",
                "name",
                "type",
                "startDate",
                "state",
                "executiveSponsor",
                "roles"
            ]
        },
        "ProjectRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "coveredKMin": {
                    "type": "number"
                },
                "daysGap": {
                    "type": "number"
                },
                "hoursExtraCovered": {
                    "type": [
                        "null",
                        "number"
                    ]
                },
                "hoursNeededToCover": {
                    "type": "number"
                },
                "isCurrentRole": {
                    "type": "boolean"
                },
                "isFutureRole": {
                    "type": "boolean"
                },
                "isPastRole": {
                    "type": "boolean"
                },
                "percentageCovered": {
                    "type": [
                        "null",
                        "number"
                    ]
                },
                "rate": {
                    "type": "object",
                    "properties": {
                        "estimatedTotal": {
                            "type": [
                                "null",
                                "number"
                            ]
                        },
                        "advAmount": {
                            "type": "number"
                        },
                        "amount": {
                            "type": "number"
                        },
                        "fullyUtilized": {
                            "type": "boolean"
                        },
                        "hoursPerMth": {
                            "type": [
                                "null",
                                "number"
                            ],
                            "maximum": 180
                        },
                        "hoursPerWeek": {
                            "type": [
                                "null",
                                "number"
                            ],
                            "maximum": 50
                        },
                        "loadedAmount": {
                            "type": "number"
                        },
                        "rateUnits": {
                            "enum": [
                                "$/hr",
                                "$/month"
                            ]
                        },
                        "type": {
                            "enum": [
                                "monthly",
                                "weekly",
                                "hourly"
                            ]
                        }
                    },
                    "required": [
                        "type"
                    ]
                },
                "shore": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "string",
                    "description": "ID of Role"
                }
            },
            "required": [
                "type",
                "rate"
            ]
        },
        "ReportFavorite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "person": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "params": {
                    "type": "object",
                    "properties": {
                        "dateRange": {
                            "type": "string"
                        },
                        "endDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "fields": {
                            "type": "object",
                            "properties": {
                                "all": {
                                    "type": "boolean"
                                },
                                "categoryHours": {
                                    "type": "object",
                                    "properties": {
                                        "marketing": {
                                            "type": "boolean"
                                        },
                                        "out": {
                                            "type": "object",
                                            "properties": {
                                                "all": {
                                                    "type": "boolean"
                                                },
                                                "holiday": {
                                                    "type": "boolean"
                                                },
                                                "sick": {
                                                    "type": "boolean"
                                                },
                                                "vacation": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "overhead": {
                                            "type": "object",
                                            "properties": {
                                                "admin": {
                                                    "type": "boolean"
                                                },
                                                "all": {
                                                    "type": "boolean"
                                                },
                                                "design": {
                                                    "type": "boolean"
                                                },
                                                "hr": {
                                                    "type": "boolean"
                                                },
                                                "meetings": {
                                                    "type": "boolean"
                                                },
                                                "rd": {
                                                    "type": "boolean"
                                                },
                                                "trainings": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "sales": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "goals": {
                                    "type": "object",
                                    "properties": {
                                        "all": {
                                            "type": "boolean"
                                        },
                                        "projectedClientHrs": {
                                            "type": "boolean"
                                        },
                                        "projectedInvestmentHrs": {
                                            "type": "boolean"
                                        },
                                        "projectedOOO": {
                                            "type": "boolean"
                                        },
                                        "utilGoals": {
                                            "type": "boolean"
                                        },
                                        "utilProjections": {
                                            "type": "boolean"
                                        },
                                        "projectedHrs": {
                                            "type": "boolean"
                                        },
                                        "projectedInvestment": {
                                            "type": "boolean"
                                        },
                                        "projectedRevenue": {
                                            "type": "boolean"
                                        },
                                        "projectedUtil": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "graphs": {
                                    "type": "object",
                                    "properties": {
                                        "graph": {
                                            "type": "boolean"
                                        },
                                        "percent": {
                                            "type": "object",
                                            "properties": {
                                                "all": {
                                                    "type": "boolean"
                                                },
                                                "out": {
                                                    "type": "boolean"
                                                },
                                                "overhead": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "trendGoals": {
                                            "type": "boolean"
                                        },
                                        "trendHrs": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "projectHours": {
                                    "type": "object",
                                    "properties": {
                                        "all": {
                                            "type": "boolean"
                                        },
                                        "actualClient": {
                                            "type": "boolean"
                                        },
                                        "actualInvestment": {
                                            "type": "boolean"
                                        },
                                        "estimatedClientHrs": {
                                            "type": "boolean"
                                        },
                                        "estimatedInvestmentHrs": {
                                            "type": "boolean"
                                        },
                                        "utilClientWork": {
                                            "type": "boolean"
                                        },
                                        "utilRole": {
                                            "type": "boolean"
                                        },
                                        "utilInvestmentWork": {
                                            "type": "boolean"
                                        },
                                        "assignmentUtilRate": {
                                            "type": "boolean"
                                        },
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "overallUtilRate": {
                                            "type": "boolean"
                                        },
                                        "spent": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "assignmentHours": {
                                    "type": "object",
                                    "properties": {
                                        "all": {
                                            "type": "boolean"
                                        },
                                        "hoursAndDesc": {
                                            "type": "boolean"
                                        },
                                        "oooDetails": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "selectedAssignedRoles": {
                                    "type": "object",
                                    "properties": {
                                        "PM": {
                                            "type": "boolean"
                                        },
                                        "SE": {
                                            "type": "boolean"
                                        },
                                        "SEO": {
                                            "type": "boolean"
                                        },
                                        "SSEO": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        "projects": {
                            "type": "array",
                            "minItems": 0,
                            "items": {
                                "type": "string",
                                "description": "ID of Project"
                            }
                        },
                        "locations": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "type": "string"
                            }
                        },
                        "output": {
                            "type": "string"
                        },
                        "reportName": {
                            "type": "string"
                        },
                        "roles": {
                            "type": "array",
                            "minItems": 0,
                            "items": {
                                "type": "string"
                            }
                        },
                        "startDate": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            },
            "required": [
                "params",
                "person",
                "type"
            ]
        },
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "abbreviation": {
                    "type": "string"
                },
                "hourlyAdvertisedRate": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "hourlyLoadedRate": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "isNonBillable": {
                    "type": "boolean"
                },
                "monthlyAdvertisedRate": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "monthlyLoadedRate": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "utilizationRate": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "resource": {
                    "type": "string"
                }
            },
            "required": [
                "title",
                "abbreviation"
            ]
        },
        "SecurityRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "permissions": {
                                "type": "array",
                                "uniqueItems": true,
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "name",
                            "permissions"
                        ]
                    }
                }
            },
            "required": [
                "name",
                "resources"
            ]
        },
        "Skill": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "required": [
                "title"
            ]
        },
        "Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "name"
            ]
        },
        "UserRole": {
            "type": "object",
            "required": [
                "roles"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "groupId": {
                    "type": "string",
                    "description": "ID of Security Role"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "ID of Security Role"
                    }
                }
            }
        },
        "Vacation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "person": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "vacationManager": {
                    "type": "string",
                    "description": "ID of Person"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "days": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "person",
                "vacationManager",
                "type",
                "status",
                "startDate",
                "endDate"
            ]
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "type": "oauth2",
            "authorizationUrl": "http://localhost:3000/auth/google",
            "flow": "implicit",
            "scopes": {
                "https://www.googleapis.com/auth/plus.login": "authenticated via Google Plus"
            }
        }
    },
    "security": [
        {
            "oauth2": [
                "https://www.googleapis.com/auth/plus.login"
            ]
        }
    ]
}